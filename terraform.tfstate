{
  "version": 4,
  "terraform_version": "1.2.8",
  "serial": 45,
  "lineage": "8bb9066c-c8bf-619b-f09b-37b0b0f6b471",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "jira_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "jira-software",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "jira",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "8.22.3",
                "chart": "jira-software",
                "name": "jira",
                "namespace": "jira",
                "revision": 2,
                "values": "{\"affinity\":{},\"caCerts\":{},\"databaseConnection\":{\"database\":\"jiradb\",\"databaseDriver\":\"org.postgresql.Driver\",\"existingSecret\":{},\"host\":\"jira-software-db\",\"lang\":\"C\",\"password\":\"CHANGEME\",\"port\":5432,\"schemaName\":\"public\",\"type\":\"postgres72\",\"urlPrefix\":\"jdbc:postgresql\",\"user\":\"jirauser\"},\"databaseDrop\":{\"dropIt\":\"no\",\"enabled\":false},\"envVars\":{},\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":{},\"repository\":\"atlassian/jira-software\",\"tag\":\"8.22.3\"},\"ingress\":{\"annotations\":{\"ingressClassName\":\"nginx\",\"kubernetes.io/ingress.class\":\"nginx\"},\"enabled\":true,\"hosts\":[{\"host\":\"jira-server.84.201.153.80.nip.io\",\"paths\":[\"/\"]}],\"tls\":false},\"initContainerImages\":{\"jdk\":\"adoptopenjdk:11-jdk-hotspot\",\"postgres\":\"postgres:9.6.11-alpine\"},\"livenessProbe\":{},\"nameOverride\":\"\",\"nodeSelector\":{},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"size\":\"10Gi\",\"storageClass\":null},\"podAnnotations\":{},\"podSecurityContext\":{\"fsGroup\":2001},\"postgresql\":{\"enabled\":true,\"fullnameOverride\":\"jira-software-db\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"docker.io\",\"repository\":\"bitnami/postgresql\",\"tag\":\"11\"},\"initdbScriptsConfigMap\":\"{{ .Release.Name }}-db-helper-cm\",\"persistence\":{\"size\":\"8Gi\"},\"postgresqlPassword\":\"postgres93\"},\"readinessProbe\":{},\"replicaCount\":1,\"resources\":{\"requests\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"}},\"schedulerName\":\"\",\"securityContext\":{},\"service\":{\"httpsPort\":null,\"loadBalancerIP\":null,\"nodePorts\":{\"http\":null,\"https\":null},\"port\":8080,\"selector\":{\"name\":\"jira-jira-software\"},\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"annotations\":{},\"create\":false,\"name\":\"\"},\"tolerations\":[]}",
                "version": "2.3.1"
              }
            ],
            "name": "jira",
            "namespace": "jira",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.mox.sh",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# https://helm.mox.sh\n# https://github.com/javimox/helm-charts\n#\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# @Notes\n# We must set resources requests and limits for preventing OOM killer\n\n## Atlassian Jira Software image version\n## ref: https://hub.docker.com/r/atlassian/jira-software\nimage:\n  # registry: hub.docker.com\n  repository: atlassian/jira-software\n  tag: 8.22.3\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: IfNotPresent\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  pullSecrets: {}\n  #   - myRegistryKeySecretName\n\n## String to partially override jira.fullname template (will maintain the release name)\nnameOverride: \"\"\n\n## String to fully override jira.fullname template\nfullnameOverride: \"\"\n\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: false\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#podsecuritycontext-v1-core\npodSecurityContext:\n  fsGroup: 2001\n\n## Security context\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\nsecurityContext: {}\n#  capabilities:\n#    drop:\n#    - ALL\n#  readOnlyRootFilesystem: true\n#  runAsNonRoot: true\n#  runAsUser: 1000\n\n## Service/Networking\n## ref: https://kubernetes.io/docs/concepts/services-networking/service/\n## Kubernetes svc configuration\nservice:\n  ## For minikube, set this to NodePort, elsewhere use LoadBalancer\n  type: LoadBalancer\n  ## Use serviceLoadBalancerIP to request a specific static IP, otherwise leave blank\n  ##\n  ## Avoid removing the http connector, as the Synchrony proxy health check, still requires HTTP\n  ## HTTP Port, must be the same as ATL_TOMCAT_PORT (default: 8080)\n  port: 8080\n  selector:\n    name: jira-jira-software\n  ## HTTPS Port, in case ATL_TOMCAT_SCHEME is set to 'https'\n  httpsPort:\n  loadBalancerIP:\n  ## Use nodePorts to requets some specific ports when usin NodePort\n  ## nodePorts:\n  ##   http: \u003cto set explicitly, choose port between 30000-32767\u003e\n  ##   https: \u003cto set explicitly, choose port between 30000-32767\u003e\n  ##\n  nodePorts:\n    http:\n    https:\n\n## Configure the ingress resource that allows you to access the\n## Jira installation. Set up the URL\n## ref: http://kubernetes.io/docs/user-guide/ingress/\ningress:\n  ## Set to true to enable ingress record generation\n  enabled: true\n  annotations:\n    ingressClassName: nginx\n    kubernetes.io/ingress.class: nginx\n  # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: jira-server.84.201.153.80.nip.io\n      paths:\n        - /\n  tls: false\n  # - secretName: jira-server.local-tls\n  #   hosts:\n  #     - jira-server.local\n\n## Resources. Mandatory, see @Notes above.\n## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\nresources:\n  requests:\n    memory: 1Gi\n    cpu: 500m\n#  limits:\n#    memory: 1Gi\n\n## Replication (without ReplicaSet)\n## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\nreplicaCount: 1\n\n## Node labels for pod assignment\n## ref: https://kubernetes.io/docs/user-guide/node-selection/\nnodeSelector: {}\n\n## Tolerations for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n## Affinity for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\naffinity: {}\n\n## Pod annotations\n## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\npodAnnotations: {}\n\n## Persistent Volume Claim\n## Jira Home directory\n## https://kubernetes.io/docs/concepts/storage/persistent-volumes/\npersistence:\n  enabled: true\n  annotations: {}\n  ## existingClaim needs the existing PVC name\n  existingClaim: \"\"\n  accessMode: ReadWriteOnce\n  size: 10Gi\n\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to nil, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  storageClass:\n\n# Additional volume mounts\nextraVolumeMounts:\n  []\n  ## Example: Mount CA file\n  # - name: ca-cert\n  #   subPath: ca_cert\n  #   mountPath: /path/to/ca_cert\n\n# Additional volumes\nextraVolumes:\n  []\n  ## Example: Add secret volume\n  # - name: ca-cert\n  #   secret:\n  #     secretName: ca-cert\n  #     items:\n  #     - key: ca-cert\n  #       path: ca_cert\n\n## Use an alternate scheduler, e.g. \"stork\".\n## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\nschedulerName: \"\"\n\n## Container Probes\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes\n## Depending what values we give, Jira won't be reachable. In doubt, leave it as it is.\nreadinessProbe: {}\n#  httpGet:\n#    path: /status\n#    port: http\n#  initialDelaySeconds: 300\n#  periodSeconds: 30\n#  failureThreshold: 6\n#  timeoutSeconds: 10\n\nlivenessProbe: {}\n#  httpGet:\n#    path: /status\n#    port: http\n#  initialDelaySeconds: 480\n#  periodSeconds: 30\n#  failureThreshold: 6\n#  timeoutSeconds: 10\n\ninitContainerImages:\n  # used keytool if 'caCerts' is enabled\n  jdk: \"adoptopenjdk:11-jdk-hotspot\"\n\n  # used pg_isready if 'postgresql' is enabled\n  postgres: \"postgres:9.6.11-alpine\"\n\n##\n## Deploy PostgreSQL. If you are using an external DB, disable this.\n## https://github.com/bitnami/charts/tree/master/bitnami/postgresql#parameters\n##\npostgresql:\n  ## Whether to deploy a postgres server to satisfy the applications database requirements.\n  enabled: true\n\n  image:\n    registry: docker.io\n    repository: bitnami/postgresql\n    tag: \"11\"\n    pullPolicy: IfNotPresent\n\n  fullnameOverride: jira-software-db\n\n  persistence:\n    size: 8Gi\n\n  ## postgres user password (needed when upgrading Chart)\n  ## generate random 10 character alphanumeric string if left empty\n  postgresqlPassword: \"postgres93\"\n\n  ## Creates 'databaseConnection.user' and '.database'\n  initdbScriptsConfigMap: |-\n    {{ .Release.Name }}-db-helper-cm\n\n  ## Use existing secret to set the password for 'databaseConnection.user' in postgres\n  ## https://github.com/javimox/helm-charts/tree/master/charts/jira-software#use-existing-secrets\n  ## https://github.com/bitnami/charts/tree/master/bitnami/postgresql#initialize-a-fresh-instance\n  ##\n  # initdbScriptsSecret: alter-user-passwd\n\n##\n## Database connection information\n## If postgresql is enabled and no database exists, it will be created (see db-helper ConfigMap)\n##\ndatabaseConnection:\n  ## Database host\n  host: jira-software-db\n\n  ## non-root Username for Jira Database\n  user: jirauser\n\n  ## Database password. CHANGE IT :)\n  password: \"CHANGEME\"\n\n  ## Or specify a secret name. databaseConnection.password will be then ignored\n  existingSecret: {}\n  #  name: mysecret\n  #  key: db-pw\n\n  ## Database name\n  database: jiradb\n\n  ## lc_collate and lc_ctype, only in case database needs to be created\n  lang: C\n\n  ## Database port number\n  port: 5432\n\n  ## Jira specific database information\n  ## https://hub.docker.com/r/atlassian/jira-software\n  ## JDBC Prefix URL\n  urlPrefix: \"jdbc:postgresql\"\n\n  ## Database Driver\n  ## https://hub.docker.com/r/atlassian/jira-software\n  databaseDriver: \"org.postgresql.Driver\"\n\n  ## Database Type\n  ## https://hub.docker.com/r/atlassian/jira-software\n  type: postgres72\n\n  ##\n  ## Database Schema Name\n  ## https://hub.docker.com/r/atlassian/jira-software\n  ## Depending of the type of the database, the Schema Name needs to be\n  ## modified to one of the followings values:\n  ## type: mssql      -\u003e schemaName: dbo\n  ## type: mysql      -\u003e schemaName: public\n  ## type: oracle10g  -\u003e schemaName: NONE\n  ## type: postgres72 -\u003e schemaName: public\n  schemaName: public\n\n## DB DROP, use with caution!\n## If postgresql.enabled is set to true and database exists, it will drop the db before creating a new one\n## (see db-helper ConfigMap)\n## This shouldn't be changed manually, instead run helm with --set databaseDrop.enabled=true --set databaseDrop.dropIt=\"yes\"\n## to be sure that you know what you are doing\ndatabaseDrop:\n  enabled: false\n  dropIt: \"no\"\n\n##\n## Jira specific configurations\n## https://hub.docker.com/r/atlassian/jira-software\n## jira/secrets/cas\ncaCerts:\n  {}\n  # secret: my-secret\n  # storepass: my-store-password\n# caCertsEnv:\n#   - name: VARIABLE\n#     value: my-value\n#\n## Environment Variables that will be injected in the ConfigMap\n## Default values unless otherwise stated\nenvVars:\n  {}\n  #\n  ## Memory / Heap Size (JVM_MINIMUM_MEMORY) Mandatory, see @Notes above\n  # JVM_MINIMUM_MEMORY: 1024m\n  ## Memory / Heap Size (JVM_MAXIMUM_MEMORY) Mandatory, see @Notes above\n  # JVM_MAXIMUM_MEMORY: 1024m\n  ## The reserved code cache size of the JVM\n  # JVM_RESERVED_CODE_CACHE_SIZE: 512m\n  #\n  ## Tomcat and Reverse Proxy Settings\n  ## Jira running behind a reverse proxy server options\n  ## Note - When ingress is enabled:\n  ## These values are set automatically. Do not uncomment these proxy settings.\n  # ATL_PROXY_NAME: \"\"\n  # ATL_PROXY_PORT: \"\"\n  # ATL_TOMCAT_PORT: 8080\n  # ATL_TOMCAT_SCHEME: http\n  # ATL_TOMCAT_SECURE: false\n  # ATL_TOMCAT_CONTEXTPATH: \"\"\n  #\n  ## Tomcat/Catalina options\n  ## ref: https://tomcat.apache.org/tomcat-7.0-doc/config/index.html\n  # ATL_TOMCAT_MGMT_PORT: 8005\n  # ATL_TOMCAT_MAXTHREADS: 100\n  # ATL_TOMCAT_MINSPARETHREADS: 10\n  # ATL_TOMCAT_CONNECTIONTIMEOUT: 20000\n  # ATL_TOMCAT_ENABLELOOKUPS: false\n  # ATL_TOMCAT_PROTOCOL: \"HTTP/1.1\"\n  # ATL_TOMCAT_ACCEPTCOUNT: 10\n  # ATL_TOMCAT_MAXHTTPHEADERSIZE: 8192\n  #\n  ## Cookie age (Remember Me maximum time remain logged-in)\n  # ATL_AUTOLOGIN_COOKIE_AGE: 1209600\n  #\n  ## Home directory. This may be on a mounted volume; if so it\n  ## should be writable by the user jira. See note below about UID mappings.\n  # JIRA_HOME: \"\"\n  #\n  ## Optional connection pool database settings\n  # ATL_DB_MAXIDLE: 20\n  # ATL_DB_MAXWAITMILLIS: 30000\n  # ATL_DB_MINEVICTABLEIDLETIMEMILLIS: 5000\n  # ATL_DB_MINIDLE: 10\n  # ATL_DB_REMOVEABANDONED: true\n  # ATL_DB_REMOVEABANDONEDTIMEOUT: 300\n  # ATL_DB_TESTONBORROW: false\n  # ATL_DB_TESTWHILEIDLE: true\n  # ATL_DB_TIMEBETWEENEVICTIONRUNSMILLIS: 30000\n## End of Environment Variables (envVars)\n\n## JVM_SUPPORT_RECOMMENDED_ARGS\n## Additional container environment variables\n# extraEnv: \"-XX:MaxMetaspaceSize=512m -XX:MaxDirectMemorySize=10m\"\n"
            ],
            "verify": false,
            "version": "2.3.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nginx-ingress",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.3.1",
                "chart": "ingress-nginx",
                "name": "nginx-ingress",
                "namespace": "nginx-ingress",
                "revision": 1,
                "values": "null",
                "version": "4.2.5"
              }
            ],
            "name": "nginx-ingress",
            "namespace": "nginx-ingress",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.2.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_iam_service_account",
      "name": "study-sa",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-09-03T13:04:16Z",
            "description": "service account for cluster",
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "id": "aje9bjmtnnjnqcdp1819",
            "name": "study-sa",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMCwiZGVsZXRlIjo2MDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_kubernetes_cluster",
      "name": "study-cluster",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_ipv4_range": "10.112.0.0/16",
            "cluster_ipv6_range": "",
            "created_at": "2022-09-10T16:03:10Z",
            "description": "study-cluster for project",
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "health": "healthy",
            "id": "cate82gphpmmauge1sdk",
            "kms_provider": [],
            "labels": {},
            "log_group_id": "ckgsua8mt0s8786v52h2",
            "master": [
              {
                "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIyMDkxMDE2MDMxMVoXDTMyMDkwNzE2MDMxMVowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKga\nWMFMXykeptNotxcN6jt0GuAEPUGg216B2zChWjpDV+ibm9F5U126CWhgjCeZ4lUn\nVn3/eNJlEzENNqVkp2L9vqgCu/wJr97FprTseeu9QdPjVeCVknDi7EFuJyr4Fmh+\nKJWOf3xyKz0SjPH4FNdr1yPwlpg0ks30BNt5vJZo1h8UE35HDoCUhBWJRS3Uhxk5\njbxUNGG9wdydvcNWiCS09AplU6rg2LcaWY3XbU3OPl8kyVVSG0YmDWgMT07rFZBV\n86NvuHu7+tlm0SqccAz/rHTcterBIfhHs6lE6FZs5eWsRT7JHzQS7JFLyzLQwqNq\nwqcGaqAtXd3PKSUfUkMCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFKCoeTvwnyZOjHkLf9fEOsrupdldMA0GCSqGSIb3\nDQEBCwUAA4IBAQCIdzfEILHmUATJPiv2f8gvyKz9Kt7JuNeZJfWW2RRmaFjkSRY9\nkqBNwgTJyT4vItuJGABZZ6sHL4BuJQmuy9rtW49GilnFDN29SxFJ1V5C299Dgstq\nrtceBtLCadn/48+5flnImkpallD5lRrpI6FKhXoXO1qmu47DJHUbTnQSSCeo2Z+y\nt8Tyx37wwr3XHYkPeJQQbrutghCWajEDFk305jHGaMsPnfPDk7/LAgfeVFssLF7d\nGIx9NuP8dWxCd97yBE5MWAqbErM0rkVs276L+z0ldYu5lliCAHNOdVdus4TwMtwk\nAyxWF9YbqrH2WpbG4T4k3/ndMbKdCIhPpmsQ\n-----END CERTIFICATE-----\n",
                "external_v4_address": "51.250.29.187",
                "external_v4_endpoint": "https://51.250.29.187",
                "internal_v4_address": "10.5.0.9",
                "internal_v4_endpoint": "https://10.5.0.9",
                "maintenance_policy": [
                  {
                    "auto_upgrade": false,
                    "maintenance_window": []
                  }
                ],
                "public_ip": true,
                "regional": [],
                "security_group_ids": [],
                "version": "1.21",
                "version_info": [
                  {
                    "current_version": "1.21",
                    "new_revision_available": false,
                    "new_revision_summary": "",
                    "version_deprecated": false
                  }
                ],
                "zonal": [
                  {
                    "subnet_id": "e2lqh4mh7b65iffsn3nk",
                    "zone": "ru-central1-b"
                  }
                ]
              }
            ],
            "name": "study-cluster",
            "network_id": "enp3lpkikpo8dg7fu5nd",
            "network_implementation": [],
            "network_policy_provider": null,
            "node_ipv4_cidr_mask_size": 24,
            "node_service_account_id": "aje9bjmtnnjnqcdp1819",
            "release_channel": "REGULAR",
            "service_account_id": "aje9bjmtnnjnqcdp1819",
            "service_ipv4_range": "10.96.0.0/16",
            "service_ipv6_range": "",
            "status": "running",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "yandex_iam_service_account.study-sa",
            "yandex_resourcemanager_folder_iam_binding.editor",
            "yandex_resourcemanager_folder_iam_binding.images-puller",
            "yandex_vpc_network.study",
            "yandex_vpc_subnet.study-subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_kubernetes_node_group",
      "name": "k8s_node_group",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_policy": [
              {
                "location": [
                  {
                    "subnet_id": "e2lqh4mh7b65iffsn3nk",
                    "zone": "ru-central1-b"
                  }
                ]
              }
            ],
            "allowed_unsafe_sysctls": [],
            "cluster_id": "cate82gphpmmauge1sdk",
            "created_at": "2022-09-10T16:10:56Z",
            "deploy_policy": [
              {
                "max_expansion": 3,
                "max_unavailable": 0
              }
            ],
            "description": "worker node",
            "id": "cat2ebuofrjn3ltrm9kb",
            "instance_group_id": "cl1r7bf8pb4p7jbbm2ti",
            "instance_template": [
              {
                "boot_disk": [
                  {
                    "size": 64,
                    "type": "network-hdd"
                  }
                ],
                "container_runtime": [
                  {
                    "type": "docker"
                  }
                ],
                "labels": {},
                "metadata": {
                  "ssh-keys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDLjbzJP20+l30Vh/JWobgK4AIPaJ0JLMNWIldqc1JjhxVBlBdoXSl9YRFaC744XqTV0HswCoiq0lIAfndTi3MvP1p1uepcQLCh0dntdUktKJOIIKU4EFbZBS2kRKVqy+SqDAL2t6kwCHJ2eD15K731dTEW7zZLtAOR8n1B9EypSgqgRiRYcAzBqYSMtsNG++hseWND19rFQJ3oI0e6c5w8pdJgXqSy0m/kVaB1skzQUA8RhywVmj8+m4xViHgMs45sLxlzEH4J93ZVwjN6CHjIKaT2CJ6moCitHfCgOxDRnt56v4i+zuLK6h6SSmhR7Wpk3pCRArXVvh1lTOf9uxJBpS8ITfK7MHNPEYpy7Wg8qzjQjT4SqlMHfl7lTCWvl4/ewPcseouQzMJHcxy6hOqORovqbO9fD1Zu4+2Aq5SLTXEpYbnQm2xhTO27ilMlGNhWr0KzSUMGMjwGyCgc3tnTcweCeT/bT5BihbYjxSigmhOUgEMEaGpB4NnSh+LAR+cuCVnZbTkyjOfKdPnkjLKrQWuSCCcS1dmxP2OQ4JWWKRmlRcYa+kGvdt9xI+2PwQxv3fBkZvRuAZDrHJkMJTD3FVqJ+i+pLAkQgla82crVQ75AWE7WqcFeTFRNBsWNuaJqj1WVBNCNf+syZfv5cJceniEZVpolyvqUGNBAcwY9sQ== barabanshchikov@uchi.ru\n"
                },
                "name": "",
                "nat": true,
                "network_acceleration_type": "type_unspecified",
                "network_interface": [
                  {
                    "ipv4": true,
                    "ipv4_dns_records": [],
                    "ipv6": false,
                    "ipv6_dns_records": [],
                    "nat": true,
                    "security_group_ids": [],
                    "subnet_ids": [
                      "e2lqh4mh7b65iffsn3nk"
                    ]
                  }
                ],
                "placement_policy": [],
                "platform_id": "standard-v3",
                "resources": [
                  {
                    "core_fraction": 20,
                    "cores": 2,
                    "gpus": 0,
                    "memory": 5
                  }
                ],
                "scheduling_policy": [
                  {
                    "preemptible": false
                  }
                ]
              }
            ],
            "labels": {
              "node_role": "worker"
            },
            "maintenance_policy": [
              {
                "auto_repair": false,
                "auto_upgrade": false,
                "maintenance_window": []
              }
            ],
            "name": "worker",
            "node_labels": {},
            "node_taints": [],
            "scale_policy": [
              {
                "auto_scale": [],
                "fixed_scale": [
                  {
                    "size": 1
                  }
                ]
              }
            ],
            "status": "running",
            "timeouts": null,
            "version": "1.21",
            "version_info": [
              {
                "current_version": "1.21",
                "new_revision_available": false,
                "new_revision_summary": "",
                "version_deprecated": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "yandex_iam_service_account.study-sa",
            "yandex_kubernetes_cluster.study-cluster",
            "yandex_resourcemanager_folder_iam_binding.editor",
            "yandex_resourcemanager_folder_iam_binding.images-puller",
            "yandex_vpc_network.study",
            "yandex_vpc_subnet.study-subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_resourcemanager_folder_iam_binding",
      "name": "editor",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "id": "b1gvsquk6jvkrc1a16m3/editor",
            "members": [
              "serviceAccount:aje9bjmtnnjnqcdp1819"
            ],
            "role": "editor",
            "sleep_after": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "yandex_iam_service_account.study-sa"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_resourcemanager_folder_iam_binding",
      "name": "images-puller",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "id": "b1gvsquk6jvkrc1a16m3/container-registry.images.puller",
            "members": [
              "serviceAccount:aje9bjmtnnjnqcdp1819"
            ],
            "role": "container-registry.images.puller",
            "sleep_after": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "yandex_iam_service_account.study-sa"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_vpc_network",
      "name": "study",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-09-03T13:04:16Z",
            "default_security_group_id": "",
            "description": "",
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "id": "enp3lpkikpo8dg7fu5nd",
            "labels": {},
            "name": "study",
            "subnet_ids": [
              "e2lqh4mh7b65iffsn3nk",
              "e9bf0lopl75hmhe5aj68",
              "e9bqq8bcgj8oo65a6jv6"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMCwiZGVsZXRlIjo2MDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_vpc_subnet",
      "name": "study-subnet",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-09-03T13:06:52Z",
            "description": "",
            "dhcp_options": [],
            "folder_id": "b1gvsquk6jvkrc1a16m3",
            "id": "e2lqh4mh7b65iffsn3nk",
            "labels": {},
            "name": "",
            "network_id": "enp3lpkikpo8dg7fu5nd",
            "route_table_id": "",
            "timeouts": null,
            "v4_cidr_blocks": [
              "10.5.0.0/24"
            ],
            "v6_cidr_blocks": [],
            "zone": "ru-central1-b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19",
          "dependencies": [
            "yandex_vpc_network.study"
          ]
        }
      ]
    }
  ]
}
